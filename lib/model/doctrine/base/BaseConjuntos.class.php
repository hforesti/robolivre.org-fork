<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Conjuntos', 'doctrine');

/**
 * BaseConjuntos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_conjunto
 * @property integer $id_tipo_conjunto
 * @property integer $id_usuario
 * @property string $imagem_perfil
 * @property string $slug
 * @property timestamp $ultima_modificacao
 * @property timestamp $data_criacao
 * 
 * @method integer   getIdConjunto()         Returns the current record's "id_conjunto" value
 * @method integer   getIdTipoConjunto()     Returns the current record's "id_tipo_conjunto" value
 * @method integer   getIdUsuario()          Returns the current record's "id_usuario" value
 * @method string    getImagemPerfil()       Returns the current record's "imagem_perfil" value
 * @method string    getSlug()               Returns the current record's "slug" value
 * @method timestamp getUltimaModificacao()  Returns the current record's "ultima_modificacao" value
 * @method timestamp getDataCriacao()        Returns the current record's "data_criacao" value
 * @method Conjuntos setIdConjunto()         Sets the current record's "id_conjunto" value
 * @method Conjuntos setIdTipoConjunto()     Sets the current record's "id_tipo_conjunto" value
 * @method Conjuntos setIdUsuario()          Sets the current record's "id_usuario" value
 * @method Conjuntos setImagemPerfil()       Sets the current record's "imagem_perfil" value
 * @method Conjuntos setSlug()               Sets the current record's "slug" value
 * @method Conjuntos setUltimaModificacao()  Sets the current record's "ultima_modificacao" value
 * @method Conjuntos setDataCriacao()        Sets the current record's "data_criacao" value
 * 
 * @package    robolivre
 * @subpackage model
 * @author     Max Guenes
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConjuntos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('conjuntos');
        $this->hasColumn('id_conjunto', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('id_tipo_conjunto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('imagem_perfil', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('slug', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('ultima_modificacao', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('data_criacao', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}